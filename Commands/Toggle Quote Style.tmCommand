<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby

class String
  def escape(char)
    gsub(/\\.|#{Regexp.quote(char)}/) { |match| match == char ? "\\#{char}" : match }
  end

  def unescape(char)
    gsub(/\\./) { |match| match == "\\#{char}" ? char : match }
  end
end

print case str = STDIN.read
  # Handle standard quotes
  when /\A"(.*)"\z/m;          "'"   + $1.unescape('"').escape("'") + "'"
  when /\A'(.*)'\z/m;          '"'   + $1.unescape("'").escape('"') + '"'
	
  # Default case
  else str + "balls"
end
</string>
	<key>fallbackInput</key>
	<string>scope</string>
	<key>input</key>
	<string>selection</string>
	<key>keyEquivalent</key>
	<string>^"</string>
	<key>name</key>
	<string>Toggle Quote Style</string>
	<key>output</key>
	<string>replaceSelectedText</string>
	<key>scope</key>
	<string>source.python string</string>
	<key>uuid</key>
	<string>65721D4D-7752-402A-89A0-A8C00E280E5F</string>
</dict>
</plist>
